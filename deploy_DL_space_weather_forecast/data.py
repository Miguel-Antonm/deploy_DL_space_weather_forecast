# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/01_data.ipynb (unless otherwise specified).

__all__ = ['getInfo', 'back', 'downloadpth', 'loadmodel', 'main']

# Cell
import torch
import wandb
import os
import re
from fastcore.script import *

# Cell
def getInfo(element):
    try:
        rutatxt=back()
        rutatxt=str(rutatxt)+"/infouser.txt"
        f = open (rutatxt,'r')
        mensaje = f.read()
        info=re.findall(str(element)+"='(.*?)'",mensaje)[0]
    finally:
        f.close()
    return info

# Cell
def back():
    path=os.getcwd()
    s=path.split('/')
    length=len(s)
    back_path=""
    for pathpart in range(0,length-1):
        if pathpart==0:
            back_path=s[pathpart]+"/"
        else:
            back_path=back_path+s[pathpart]+"/"
    return str(back_path)


# Cell
def downloadpth(path,idsweep):
    api = wandb.Api()
    sweep = api.sweep(str(idsweep))
    pathsweep=str(path)+str(sweep.config["name"])

    numberrun=1
    for run in sweep.runs:
        pathfile=str(pathsweep)+"/sweep_run_"+str(numberrun)+"/"
        numberrun=1+numberrun
        for file in run.files():
            if(file.name.find("best.pth")==0):
                file.download(pathfile,replace=True)
            if(file.name.find("config.yaml")==0):
                file.download(pathfile,replace=True)


# Cell
def loadmodel(path):
    #login()
    ensembleH3 = "ecstevenson/swe_pytorch_ensemble/2c28yzhn"
    ensembleH5H7 = "ecstevenson/swe_pytorch_ensemble/6gkj1b5m"
    ensembleH10H14 = "ecstevenson/swe_pytorch_ensemble/0mhqqzhc"
    ensembleH21H27 = "ecstevenson/swe_pytorch_ensemble/oupg313c"
    downloadpth(path,ensembleH3)
    downloadpth(path,ensembleH5H7)
    downloadpth(path,ensembleH10H14)
    downloadpth(path,ensembleH21H27)


# Cell
@call_parse
def main():
    path= getInfo("pthdirectory")
    loadmodel(path)