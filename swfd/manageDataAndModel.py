# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/03_manageDataAndModel.ipynb (unless otherwise specified).

__all__ = ['NORMALIZE', 'HORIZONS', 'COLUMNS', 'getAllHorizonPrediction', 'savePredict', 'loadPredict',
           'updatePredicts']

# Cell
from .load_model import *
import datetime
import numpy as np
from .resources import getInfo
import csv
import time
import pandas as pd
import pickle
NORMALIZE=707.6
HORIZONS=[3,5,7,10,14,21,27]
COLUMNS=['Date','H3','H5','H7','H10','H14','H21','H27']

# Cell
def getAllHorizonPrediction(date):
    allpredicts=[]
    allpredicts.append(date)
    for horizon in HORIZONS:
        try:
                predict=ensemblePrediction(horizon,date)
                mean,std=ensembleMeanVar(predict)
                allpredicts.append([mean,std])
        except TypeError: #Excepcion que salta con fecha invalida
                print("error en horizonte",horizon, " el dia",date)
                allpredicts.append([])
    return np.matrix(allpredicts,dtype="object")


# Cell
def savePredict(datalist):
    path=getInfo("csvdirectory")+"predictionData.csv"
    try:
        outfile  = open(path, 'wb')
        pickle.dump(datalist, outfile )
    finally:
        outfile.close()


# Cell
def loadPredict():
    predict= pd.DataFrame(columns=COLUMNS)
    path=getInfo("csvdirectory")+"predictionData.csv"
    try:
        with open(path,'rb') as infile:
            predict = pickle.load(infile, encoding='bytes')
        infile.close()
    except IOError:
        print("File not accessible")

    return predict

# Cell
def updatePredicts():
    path=getInfo("csvdirectory")+"predictionData.csv"
    datapredict=loadPredict()
    if(not datapredict.empty):
        yesterday = datetime.datetime.today().date()-datetime.timedelta(1)
        predictdate=pd.to_datetime(datapredict.loc[0,"Date"])+datetime.timedelta(1) #First date to predict

        if(yesterday >= predictdate):

            while(yesterday >= predictdate):# while yesterday is not in the past of data(predictdate)

                #print(predictdate,yesterday)
                print("Currently making ", predictdate ," prediction")
                currentpredict=getAllHorizonPrediction(predictdate)
                datapredict=pd.concat([pd.DataFrame(currentpredict,columns=COLUMNS), datapredict], ignore_index=True)
                predictdate=predictdate+datetime.timedelta(1)


            print("Updated to ",yesterday)
            savePredict(datapredict)
        else:
            print("It was already updated")
    else:
        print("The file does not exist, you should make predictions to update")