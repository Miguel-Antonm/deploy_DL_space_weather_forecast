# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/01_data.ipynb (unless otherwise specified).

__all__ = ['getrunids', 'downloadpth', 'downloadmodel', 'main']

# Cell
import wandb
from fastcore.script import *
from .resources import *

# Cell
def getrunids(nametxt):
    #Cambiar esto a uno estatico quiza dentro de proyecto
    pathfoldercsv=getInfo("csvdirectory")
    datalist=[]
    try:
        with open(str(pathfoldercsv)+str(nametxt), 'r') as myFile:
            datalist=[line.rstrip() for line in myFile]

        datalist.remove("ID")
        while('' in datalist):
            datalist.remove('')
    finally:
        myFile.close()
    return datalist

# Cell
def downloadpth(nametxt,savedirectory):
    api = wandb.Api()
    runs_id=getrunids(nametxt)
    runnumber=1
    horizon=-1
    for run_id in runs_id:
            run =api.run("stardust-r/deep-learning-space-weather-forecasting/{}".format(run_id))
            #Comparamos el H anterior con el actual para resetear el contador de carpetas en caso de nuevo H
            if(horizon != run.config["horizon"]):
                runnumber=1
            else:
                runnumber=1+runnumber
            horizon=run.config['horizon']
            pathHorizon=str(savedirectory)+"ensembleH"+str(horizon)
            pathfile=str(pathHorizon)+"/sweep_run_"+str(runnumber)+"/"
            for file in run.files():
                if(file.name.find("config.yaml")==0):
                    file.download(pathfile,replace=True)
                if(file.name.find("models/best.pth")==0):
                    file.download(pathfile,replace=True)


# Cell
def downloadmodel(path):
    ensemblerunids=["ensembleH3.txt","ensembleH5H7.txt","ensembleH10H14.txt","ensembleH21H27.txt"]

    for ensemble in ensemblerunids:
        print(ensemble)
        downloadpth(ensemble,path)
        #print(ensemble,path)

# Cell
@call_parse
def main():
    path= getInfo("pthdirectory")
    downloadmodel(path)