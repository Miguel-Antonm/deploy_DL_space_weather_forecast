# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/05_menu.ipynb (unless otherwise specified).

__all__ = ['createFile', 'changeTxtOption', 'chooseOption', 'showmenu', 'showPredictionsMenu', 'showTxtMenu', 'main']

# Cell

import os
import datetime

from fastcore.script import * # @Callparser

from .resources import back
from .web_scraping import webScraping
from .download_model import downloadmodel
from .manageDataAndModel import updatePredicts,doNewPredicts,infoDatesPredicts

# Cell
def createFile():
    archi1=open(back()+"infouser.txt","w")
    archi1.write("user=''\n")
    archi1.write("password=''\n")
    archi1.write("csvdirectory=''\n")
    archi1.write("pthdirectory=''\n")
    archi1.close()

# Cell
def changeTxtOption(line_num,option):

    with open(back()+"infouser.txt", 'r') as txt:
        lines = txt.readlines()
        print("prueba1  "+lines[line_num] )
        value=lines[line_num].split("'")[-2]

        if option != "password" and value=='':
            print("Current "+option+" value: "+value)

        inputstring = str(input("Enter the value for "+option+" (write '0' to back): "))
        if(option!="0"):
            print("prueba"+lines[line_num] +"\n")
            lines[line_num] = option+"='"+inputstring+"'\n"
            with open(back()+"infouser.txt", 'w') as txt:
                txt.writelines(lines)
                print(option+" update")

# Cell
def chooseOption():
    isnumber=False
    while(not isnumber):
        try:
            option = int(input("Enter the number of the option: "))
            isnumber=True
        except ValueError:
            print('Error, Need a correct option')

    return option

# Cell
def showmenu():
    os.system ("clear")
    exit=False
    while not exit:

        print("1-Download sfu data\n2-Download model\n3-Prediction settings\n4-Txt settings\n5-Exit")
        option=chooseOption()
        if option == 1:
            webScraping()
        elif option == 2:
            downloadmodel()
        elif option == 3:
            showPredictionsMenu()
        elif option == 4:
            showTxtMenu()
        elif option == 5:
            exit = True
        else:
            print ("\n\nOption has to be between 1 and 5")

# Cell
def showPredictionsMenu():
    os.system ("clear")
    exit=False
    while not exit:
        print("1-Update predictions until today\n2-Extend past predictions\n3-back\n")
        startdate,enddate=infoDatesPredicts()
        print("******* start",startdate,"  end ",enddate) #Arreglar
        option=chooseOption()
        if option == 1:
            updatePredicts()
        elif option == 2:
            isnumber=False
            while(not isnumber):
                try:
                    days = int(input("Enter the number of days to predict from {}: ".format(enddate)))
                    isnumber=True
                except ValueError:
                    print('Error, Need a correct option')
            doNewPredicts(days)
        elif option == 3:
            exit = True
        else:
            print ("\n\nOption has to be between 1 and 3")

# Cell
def showTxtMenu():
    os.system ("clear")
    exit=False
    while not exit:
        print("1-Change ESA user\n2-Change ESA password\n3-Change csv directory\n4-Change pth directory\n5-Back")
        option=chooseOption()
        if option == 1:
            changeTxtOption(0,"user")
        elif option == 2:
            changeTxtOption(1,"password")
        elif option == 3:
            changeTxtOption(2,"csvdirectory")
        elif option == 4:
            changeTxtOption(3,"pthdirectory")
        elif option == 5:
            exit = True
        else:
            print ("\n\nOption has to be between 1 and 5")

# Cell
@call_parse
def main():
    if not os.path.isfile(back()+'infouser.txt'):
        createFile()
    showmenu()